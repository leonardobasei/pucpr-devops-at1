name: PR Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ master, develop ]

jobs:
  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: |
        echo "🔍 Executando linting..."
        npm run lint || echo "Linting completed with warnings"
    
    - name: Run unit tests
      run: |
        echo "🧪 Executando testes unitários..."
        npm test -- --verbose --coverage
    
    - name: Generate test report
      run: |
        echo "📊 Gerando relatório de testes..."
        npm test -- --coverage --coverageReporters=text-lcov > coverage.lcov || true
        npm test -- --coverage --coverageReporters=json-summary > coverage-summary.json || true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.lcov
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Test summary
      run: |
        echo "📋 Resumo dos Testes:"
        echo "===================="
        if [ -f coverage-summary.json ]; then
          echo "📈 Cobertura de Código:"
          cat coverage-summary.json | jq '.total.lines.pct' | sed 's/^/  - Linhas: /' | sed 's/$/%/'
          cat coverage-summary.json | jq '.total.functions.pct' | sed 's/^/  - Funções: /' | sed 's/$/%/'
          cat coverage-summary.json | jq '.total.branches.pct' | sed 's/^/  - Branches: /' | sed 's/$/%/'
        fi
        echo ""
        echo "✅ Testes unitários executados com sucesso!"
        echo "🔍 Verifique os logs acima para detalhes dos testes"
    
    - name: Comment PR with test results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          // Ler resultados de cobertura se existir
          let coverageInfo = '';
          try {
            const coverage = JSON.parse(fs.readFileSync('coverage-summary.json', 'utf8'));
            coverageInfo = `
            ## 📊 Cobertura de Testes
            
            | Métrica | Cobertura |
            |---------|-----------|
            | Linhas | ${coverage.total.lines.pct}% |
            | Funções | ${coverage.total.functions.pct}% |
            | Branches | ${coverage.total.branches.pct}% |
            `;
          } catch (e) {
            coverageInfo = '## 📊 Cobertura de Testes\n\nCobertura não disponível neste momento.';
          }
          
          const comment = `
          ## 🧪 Resultados dos Testes Unitários
          
          ✅ **Status**: Todos os testes unitários passaram com sucesso!
          
          ${coverageInfo}
          
          ### 📋 Testes Executados
          - ✅ Testes de API (GET, POST, PUT, DELETE)
          - ✅ Validações de entrada
          - ✅ Casos edge e validações específicas
          - ✅ Testes de estatísticas
          - ✅ Validações de UUID e timestamps
          
          ### 🔍 Detalhes
          - **Node.js**: 18
          - **Framework de Teste**: Jest
          - **Cobertura**: Gerada automaticamente
          
          ---
          *Este comentário foi gerado automaticamente pelo GitHub Actions*
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
